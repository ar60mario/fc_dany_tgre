/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.ventas.frame;

import ar.com.ventas.entities.CodigoBarra;
import ar.com.ventas.entities.PorcentajeIva;
import ar.com.ventas.entities.Precio;
import ar.com.ventas.entities.Producto2;
import ar.com.ventas.entities.Proveedor2;
import ar.com.ventas.entities.Rubro2;
import ar.com.ventas.entities.Stock;
import ar.com.ventas.entities.SubRubro2;
import ar.com.ventas.services.PorcentajeIvaService;
import ar.com.ventas.services.ProductoService;
import ar.com.ventas.services.Proveedor2Service;
import ar.com.ventas.services.Rubro2Service;
import ar.com.ventas.services.SubRubro2Service;
import ar.com.ventas.structure.Constantes;
import java.math.BigDecimal;
import java.math.MathContext;
import java.sql.Time;
import java.text.DecimalFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author argia
 */
public class NuevoProductoFrame extends javax.swing.JFrame {

    private List<Proveedor2> proveedores;
    private List<Rubro2> rubros;
    private List<SubRubro2> subRubros;
    private List<CodigoBarra> codigosBarra;
    private List<PorcentajeIva>  ivas;
    private DecimalFormat df3 = new DecimalFormat("#0.000");
    private DecimalFormat df2 = new DecimalFormat("#0.00");
    private MathContext precision = new MathContext(5); // example 2

    /**
     * Creates new form AbmProductosFrame
     */
    public NuevoProductoFrame() {
        initComponents();
        limpiarCampos();
        llenarCombos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        volverBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        codigoTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        comboC = new javax.swing.JComboBox<>();
        agregarBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        descripcionTxt = new javax.swing.JTextField();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        movimientoBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        stockEntranteTxt = new javax.swing.JTextField();
        stockMinimoTxt = new javax.swing.JTextField();
        puntoPedidoTxt = new javax.swing.JTextField();
        stockMaximoTxt = new javax.swing.JTextField();
        stockActualTxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        precioTxt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        impuestoTxt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        sugeridoTxt = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        porcentaje2Txt = new javax.swing.JTextField();
        porcentaje3Txt = new javax.swing.JTextField();
        precio2Txt = new javax.swing.JTextField();
        precio3Txt = new javax.swing.JTextField();
        porcentaje4Txt = new javax.swing.JTextField();
        porcentaje5Txt = new javax.swing.JTextField();
        precio4Txt = new javax.swing.JTextField();
        precio5Txt = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        porcentaje6Txt = new javax.swing.JTextField();
        porcentaje7Txt = new javax.swing.JTextField();
        precio6Txt = new javax.swing.JTextField();
        precio7Txt = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        unidadFraccionTxt = new javax.swing.JTextField();
        unidadCajaTxt = new javax.swing.JTextField();
        cantidadPorBultoTxt = new javax.swing.JTextField();
        descuentoCTxt = new javax.swing.JTextField();
        descuentoBTxt = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        comboP = new javax.swing.JComboBox<>();
        jLabel31 = new javax.swing.JLabel();
        costoUnitarioTxt = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        costoCajaTxt = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        costoBultoTxt = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        porcentajeTxt = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        fechaTxt = new javax.swing.JTextField();
        comboR = new javax.swing.JComboBox<>();
        comboSR = new javax.swing.JComboBox<>();
        grabarBtn = new javax.swing.JButton();
        jLabel38 = new javax.swing.JLabel();
        comboI = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("NUEVO PRODUCTO");

        volverBtn.setText("VOLVER");
        volverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("CODIGO:");

        codigoTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        codigoTxt.setText("CODIGO");

        jLabel2.setText("COD.BARRAS:");

        comboC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        agregarBtn.setText("AGREGAR");

        jLabel3.setText("DESCRIPCION:");

        descripcionTxt.setText("DESCRIPCION");
        descripcionTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                descripcionTxtKeyPressed(evt);
            }
        });

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        movimientoBtn.setText("MOV.");
        movimientoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movimientoBtnActionPerformed(evt);
            }
        });

        jLabel4.setText("STOCK:");

        jLabel5.setText("ENTRANTE:");

        jLabel6.setText("MIN.:");

        jLabel7.setText("PEDIR:");

        jLabel8.setText("MAX.:");

        jLabel9.setText("ACTUAL:");

        stockEntranteTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        stockEntranteTxt.setText("IN");
        stockEntranteTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                stockEntranteTxtKeyPressed(evt);
            }
        });

        stockMinimoTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        stockMinimoTxt.setText("MIN");
        stockMinimoTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                stockMinimoTxtKeyPressed(evt);
            }
        });

        puntoPedidoTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        puntoPedidoTxt.setText("PEDIR");
        puntoPedidoTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                puntoPedidoTxtKeyPressed(evt);
            }
        });

        stockMaximoTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        stockMaximoTxt.setText("MAX");
        stockMaximoTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                stockMaximoTxtKeyPressed(evt);
            }
        });

        stockActualTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        stockActualTxt.setText("ACTUAL");
        stockActualTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                stockActualTxtKeyPressed(evt);
            }
        });

        jLayeredPane1.setLayer(movimientoBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(stockEntranteTxt, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(stockMinimoTxt, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(puntoPedidoTxt, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(stockMaximoTxt, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(stockActualTxt, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(movimientoBtn))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(stockEntranteTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                            .addComponent(stockMinimoTxt)
                            .addComponent(puntoPedidoTxt)
                            .addComponent(stockMaximoTxt)
                            .addComponent(stockActualTxt))
                        .addGap(0, 56, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(movimientoBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(stockEntranteTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(stockMinimoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(puntoPedidoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(stockMaximoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(stockActualTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jLabel10.setText("PRECIO:");

        precioTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        precioTxt.setText("PRECIO");
        precioTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                precioTxtKeyPressed(evt);
            }
        });

        jLabel11.setText("IMP.INTERNOS:");

        impuestoTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        impuestoTxt.setText("IMPUESTO");

        jLabel12.setText("SUGERIDO:");

        sugeridoTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        sugeridoTxt.setText("SUGERIDO");

        jLabel13.setText("%");

        jLabel14.setText("PRECIO");

        jLabel15.setText("%");

        jLabel16.setText("PRECIO");

        jLabel17.setText("%");

        jLabel18.setText("PRECIO");

        jLabel19.setText("L2");

        jLabel20.setText("L3");

        porcentaje2Txt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        porcentaje2Txt.setText("S");
        porcentaje2Txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                porcentaje2TxtKeyPressed(evt);
            }
        });

        porcentaje3Txt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        porcentaje3Txt.setText("S");
        porcentaje3Txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                porcentaje3TxtKeyPressed(evt);
            }
        });

        precio2Txt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        precio2Txt.setText("S");
        precio2Txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                precio2TxtKeyPressed(evt);
            }
        });

        precio3Txt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        precio3Txt.setText("S");
        precio3Txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                precio3TxtKeyPressed(evt);
            }
        });

        porcentaje4Txt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        porcentaje4Txt.setText("S");
        porcentaje4Txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                porcentaje4TxtKeyPressed(evt);
            }
        });

        porcentaje5Txt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        porcentaje5Txt.setText("S");
        porcentaje5Txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                porcentaje5TxtKeyPressed(evt);
            }
        });

        precio4Txt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        precio4Txt.setText("W");
        precio4Txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                precio4TxtKeyPressed(evt);
            }
        });

        precio5Txt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        precio5Txt.setText("W");
        precio5Txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                precio5TxtKeyPressed(evt);
            }
        });

        jLabel21.setText("L4");

        jLabel22.setText("L5 *");

        jLabel23.setText("L6 *");

        jLabel24.setText("L7 *");

        porcentaje6Txt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        porcentaje6Txt.setText("W");
        porcentaje6Txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                porcentaje6TxtKeyPressed(evt);
            }
        });

        porcentaje7Txt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        porcentaje7Txt.setText("W");
        porcentaje7Txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                porcentaje7TxtKeyPressed(evt);
            }
        });

        precio6Txt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        precio6Txt.setText("W");
        precio6Txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                precio6TxtKeyPressed(evt);
            }
        });

        precio7Txt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        precio7Txt.setText("W");
        precio7Txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                precio7TxtKeyPressed(evt);
            }
        });

        jLabel25.setText("U.FRACC.");

        jLabel26.setText("U.CAJA");

        jLabel27.setText("C x BULTO");

        jLabel28.setText("DTO C");

        jLabel29.setText("DTO B");

        unidadFraccionTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        unidadFraccionTxt.setText("W");
        unidadFraccionTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                unidadFraccionTxtKeyPressed(evt);
            }
        });

        unidadCajaTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        unidadCajaTxt.setText("W");
        unidadCajaTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                unidadCajaTxtKeyPressed(evt);
            }
        });

        cantidadPorBultoTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cantidadPorBultoTxt.setText("W");
        cantidadPorBultoTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cantidadPorBultoTxtKeyPressed(evt);
            }
        });

        descuentoCTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        descuentoCTxt.setText("W");

        descuentoBTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        descuentoBTxt.setText("W");

        jLabel30.setText("PROVEEDOR:");

        comboP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel31.setText("COSTO. UNIT.");

        costoUnitarioTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        costoUnitarioTxt.setText("W");
        costoUnitarioTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                costoUnitarioTxtKeyPressed(evt);
            }
        });

        jLabel32.setText("COSTO CAJA:");

        costoCajaTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        costoCajaTxt.setText("COSTO CAJA");

        jLabel33.setText("COSTO BULTO:");

        costoBultoTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        costoBultoTxt.setText("COSTO BULTO");

        jLabel34.setText("%");

        porcentajeTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        porcentajeTxt.setText("PORCE");
        porcentajeTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                porcentajeTxtKeyPressed(evt);
            }
        });

        jLabel35.setText("RUBRO:");

        jLabel36.setText("SUB RUBRO:");

        jLabel37.setText("FECHA ULTIMA ACTUALIZACION:");

        fechaTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fechaTxt.setText("FECHA Y HORA");

        comboR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        comboSR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        grabarBtn.setText("GRABAR");
        grabarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grabarBtnActionPerformed(evt);
            }
        });

        jLabel38.setText("IVA:");

        comboI.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(grabarBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(volverBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(codigoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(99, 99, 99)
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(comboC, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(descripcionTxt)))
                                .addGap(18, 18, 18)
                                .addComponent(agregarBtn))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel10)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(precioTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel11))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                    .addComponent(jLabel19)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel13)
                                                        .addComponent(porcentaje2Txt)))
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                    .addComponent(jLabel20)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(unidadFraccionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel25)
                                                        .addComponent(porcentaje3Txt))))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                .addComponent(precio2Txt, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                                                                .addComponent(precio3Txt))
                                                            .addGap(18, 18, 18)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jLabel21)
                                                                .addComponent(jLabel22)))
                                                        .addComponent(jLabel14))
                                                    .addGap(18, 18, 18)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(porcentaje5Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(porcentaje4Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel15)))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel26)
                                                    .addGap(37, 37, 37)
                                                    .addComponent(jLabel27))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(unidadCajaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(cantidadPorBultoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addComponent(comboP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel30))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(impuestoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel12)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(sugeridoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(precio4Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jLabel23))
                                                    .addComponent(jLabel16))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(porcentaje6Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel17))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel18)
                                                    .addComponent(precio6Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(precio5Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel28))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel29)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel24)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(porcentaje7Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(precio7Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(descuentoBTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(descuentoCTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel31)
                                                .addGap(18, 18, 18)
                                                .addComponent(costoUnitarioTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 230, Short.MAX_VALUE)))))
                        .addGap(18, 18, 18)
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel36)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel37)
                                .addGap(18, 18, 18)
                                .addComponent(fechaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel32)
                                    .addComponent(jLabel35))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(costoCajaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel33)
                                        .addGap(18, 18, 18)
                                        .addComponent(costoBultoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel34)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(porcentajeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(comboSR, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(comboR, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel38)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(comboI, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(codigoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(comboC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(agregarBtn))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(descripcionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(precioTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(impuestoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(sugeridoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(porcentaje2Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(precio2Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)
                            .addComponent(porcentaje4Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(precio4Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23)
                            .addComponent(porcentaje6Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(precio6Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(porcentaje3Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(precio3Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22)
                            .addComponent(porcentaje5Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(precio5Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24)
                            .addComponent(porcentaje7Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(precio7Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(jLabel26)
                            .addComponent(jLabel27)
                            .addComponent(jLabel28)
                            .addComponent(jLabel29)))
                    .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(unidadFraccionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unidadCajaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cantidadPorBultoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(descuentoCTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(descuentoBTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(comboP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31)
                    .addComponent(costoUnitarioTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(costoCajaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33)
                    .addComponent(costoBultoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34)
                    .addComponent(porcentajeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(comboR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38)
                    .addComponent(comboI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(comboSR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(fechaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(volverBtn)
                    .addComponent(grabarBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBtnActionPerformed
        volver();
    }//GEN-LAST:event_volverBtnActionPerformed

    private void grabarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grabarBtnActionPerformed
        grabar();
    }//GEN-LAST:event_grabarBtnActionPerformed

    private void costoUnitarioTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_costoUnitarioTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!costoUnitarioTxt.getText().isEmpty()) { // BigDecimal bd = new BigDecimal(costoUnitarioTxt.getText().replace(",", "."));
                if (!porcentajeTxt.getText().isEmpty()) {
                    Double costoUnitario = Double.valueOf(costoUnitarioTxt.getText());
                    Double precio = calcularPreciosLista(costoUnitario);
                    precioTxt.setText(df3.format(precio));
                } else {
                    porcentajeTxt.requestFocus();
                }
            }
        }
    }//GEN-LAST:event_costoUnitarioTxtKeyPressed

    private void precio4TxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precio4TxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!precio4Txt.getText().isEmpty()) {
                calcularPorcentual4();
            }
        }
    }//GEN-LAST:event_precio4TxtKeyPressed

    private void precio3TxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precio3TxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!precio3Txt.getText().isEmpty()) {
                calcularPorcentual3();
            }
        }
    }//GEN-LAST:event_precio3TxtKeyPressed

    private void porcentajeTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_porcentajeTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!porcentajeTxt.getText().isEmpty()) {
                if (!costoUnitarioTxt.getText().isEmpty()) {
                    Double costoUnitario = Double.valueOf(costoUnitarioTxt.getText());
                    Double precio = calcularPreciosLista(costoUnitario);
                    precioTxt.setText(df3.format(precio));
                    porcentaje2Txt.requestFocus();
                } else {
                    precioTxt.requestFocus();
                }
            }
        }
    }//GEN-LAST:event_porcentajeTxtKeyPressed

    private void movimientoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movimientoBtnActionPerformed
        habilitarCamposStock();
        stockEntranteTxt.requestFocus();
    }//GEN-LAST:event_movimientoBtnActionPerformed

    private void stockActualTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stockActualTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            bloquearCamposStock();
        }
    }//GEN-LAST:event_stockActualTxtKeyPressed

    private void stockEntranteTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stockEntranteTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            stockMinimoTxt.requestFocus();
        }
    }//GEN-LAST:event_stockEntranteTxtKeyPressed

    private void stockMinimoTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stockMinimoTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            puntoPedidoTxt.requestFocus();
        }
    }//GEN-LAST:event_stockMinimoTxtKeyPressed

    private void puntoPedidoTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_puntoPedidoTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            stockMaximoTxt.requestFocus();
        }
    }//GEN-LAST:event_puntoPedidoTxtKeyPressed

    private void stockMaximoTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stockMaximoTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            stockActualTxt.requestFocus();
        }
    }//GEN-LAST:event_stockMaximoTxtKeyPressed

    private void precio2TxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precio2TxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!precio2Txt.getText().isEmpty()) {
                calcularPorcentual2();
            }
        }
    }//GEN-LAST:event_precio2TxtKeyPressed

    private void porcentaje2TxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_porcentaje2TxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!porcentaje2Txt.getText().isEmpty()) {
                calcularPrecio2();
                porcentaje3Txt.requestFocus();
            } else {
                porcentaje2Txt.setText("0.00");
            }
        }
    }//GEN-LAST:event_porcentaje2TxtKeyPressed

    private void porcentaje3TxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_porcentaje3TxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!porcentaje3Txt.getText().isEmpty()) {
                calcularPrecio3();
                porcentaje4Txt.requestFocus();
            } else {
                porcentaje3Txt.setText("0.00");
            }
        }
    }//GEN-LAST:event_porcentaje3TxtKeyPressed

    private void porcentaje4TxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_porcentaje4TxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!porcentaje4Txt.getText().isEmpty()) {
                calcularPrecio4();
                porcentaje5Txt.requestFocus();
            } else {
                porcentaje4Txt.setText("0.00");
            }
        }
    }//GEN-LAST:event_porcentaje4TxtKeyPressed

    private void porcentaje5TxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_porcentaje5TxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!porcentaje5Txt.getText().isEmpty()) {
                calcularPrecio5();
                porcentaje6Txt.requestFocus();
            } else {
                porcentaje5Txt.setText("0.00");
            }
        }
    }//GEN-LAST:event_porcentaje5TxtKeyPressed

    private void porcentaje6TxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_porcentaje6TxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!porcentaje6Txt.getText().isEmpty()) {
                calcularPrecio6();
                porcentaje7Txt.requestFocus();
            } else {
                porcentaje6Txt.setText("0.00");
            }
        }
    }//GEN-LAST:event_porcentaje6TxtKeyPressed

    private void porcentaje7TxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_porcentaje7TxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!porcentaje7Txt.getText().isEmpty()) {
                calcularPrecio7();
                unidadFraccionTxt.requestFocus();
            } else {
                porcentaje7Txt.setText("0.00");
            }
        }
    }//GEN-LAST:event_porcentaje7TxtKeyPressed

    private void precio5TxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precio5TxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!precio5Txt.getText().isEmpty()) {
                calcularPorcentual5();
            }
        }
    }//GEN-LAST:event_precio5TxtKeyPressed

    private void precio6TxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precio6TxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!precio6Txt.getText().isEmpty()) {
                calcularPorcentual6();
            }
        }
    }//GEN-LAST:event_precio6TxtKeyPressed

    private void precio7TxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precio7TxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!precio7Txt.getText().isEmpty()) {
                calcularPorcentual7();
            }
        }
    }//GEN-LAST:event_precio7TxtKeyPressed

    private void descripcionTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descripcionTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            costoUnitarioTxt.requestFocus();
        }
    }//GEN-LAST:event_descripcionTxtKeyPressed

    private void precioTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precioTxtKeyPressed
        if (evt.getKeyCode() == 10) {

        }
    }//GEN-LAST:event_precioTxtKeyPressed

    private void unidadCajaTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_unidadCajaTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (unidadCajaTxt.getText().isEmpty()) {
                unidadCajaTxt.setText("1");
            }
            if (!costoUnitarioTxt.getText().isEmpty()) {
                BigDecimal bd_caja = new BigDecimal(costoUnitarioTxt.getText().replace(",", "."));
                BigDecimal bd_cantidad = new BigDecimal(unidadCajaTxt.getText().replace(",", "."));
                BigDecimal bd_costoCaja = bd_caja.multiply(bd_cantidad);
                costoCajaTxt.setText(df3.format(bd_costoCaja.doubleValue()));
                cantidadPorBultoTxt.requestFocus();
            }
        }
    }//GEN-LAST:event_unidadCajaTxtKeyPressed

    private void unidadFraccionTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_unidadFraccionTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!unidadFraccionTxt.getText().isEmpty()) {
                unidadFraccionTxt.setText("1");
                unidadCajaTxt.requestFocus();
            }
        }
    }//GEN-LAST:event_unidadFraccionTxtKeyPressed

    private void cantidadPorBultoTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantidadPorBultoTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!cantidadPorBultoTxt.getText().isEmpty()) {
                if (!costoUnitarioTxt.getText().isEmpty()) {
                    BigDecimal bd_cantidadPorBulto = new BigDecimal(cantidadPorBultoTxt.getText().replace(",", "."));
                    BigDecimal bd_costoUnitario = new BigDecimal(costoUnitarioTxt.getText().replace(",", "."));
                    BigDecimal bd_costoPorBulto = bd_cantidadPorBulto.multiply(bd_costoUnitario);
                    costoBultoTxt.setText(df3.format(bd_costoPorBulto.doubleValue()));
                }
            }
        }
    }//GEN-LAST:event_cantidadPorBultoTxtKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NuevoProductoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NuevoProductoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NuevoProductoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NuevoProductoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NuevoProductoFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarBtn;
    private javax.swing.JTextField cantidadPorBultoTxt;
    private javax.swing.JTextField codigoTxt;
    private javax.swing.JComboBox<String> comboC;
    private javax.swing.JComboBox<String> comboI;
    private javax.swing.JComboBox<String> comboP;
    private javax.swing.JComboBox<String> comboR;
    private javax.swing.JComboBox<String> comboSR;
    private javax.swing.JTextField costoBultoTxt;
    private javax.swing.JTextField costoCajaTxt;
    private javax.swing.JTextField costoUnitarioTxt;
    private javax.swing.JTextField descripcionTxt;
    private javax.swing.JTextField descuentoBTxt;
    private javax.swing.JTextField descuentoCTxt;
    private javax.swing.JTextField fechaTxt;
    private javax.swing.JButton grabarBtn;
    private javax.swing.JTextField impuestoTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JButton movimientoBtn;
    private javax.swing.JTextField porcentaje2Txt;
    private javax.swing.JTextField porcentaje3Txt;
    private javax.swing.JTextField porcentaje4Txt;
    private javax.swing.JTextField porcentaje5Txt;
    private javax.swing.JTextField porcentaje6Txt;
    private javax.swing.JTextField porcentaje7Txt;
    private javax.swing.JTextField porcentajeTxt;
    private javax.swing.JTextField precio2Txt;
    private javax.swing.JTextField precio3Txt;
    private javax.swing.JTextField precio4Txt;
    private javax.swing.JTextField precio5Txt;
    private javax.swing.JTextField precio6Txt;
    private javax.swing.JTextField precio7Txt;
    private javax.swing.JTextField precioTxt;
    private javax.swing.JTextField puntoPedidoTxt;
    private javax.swing.JTextField stockActualTxt;
    private javax.swing.JTextField stockEntranteTxt;
    private javax.swing.JTextField stockMaximoTxt;
    private javax.swing.JTextField stockMinimoTxt;
    private javax.swing.JTextField sugeridoTxt;
    private javax.swing.JTextField unidadCajaTxt;
    private javax.swing.JTextField unidadFraccionTxt;
    private javax.swing.JButton volverBtn;
    // End of variables declaration//GEN-END:variables

    private void volver() {
        AbmProductosFrame mf = new AbmProductosFrame();
        mf.setVisible(true);
        this.dispose();
    }

    private void limpiarCampos() {
        jLabel2.setVisible(false);
        comboC.setVisible(false);
        agregarBtn.setVisible(false);
        getContentPane().setBackground(new java.awt.Color(Constantes.getR(),
                Constantes.getG(),
                Constantes.getB()));
        Integer codigo = 0;
        try {
            codigo = new ProductoService().getCodigoSiguiente();
            codigo += 1;
        } catch (Exception ex) {
            Logger.getLogger(NuevoProductoFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        codigoTxt.setText(codigo.toString());
        descripcionTxt.requestFocus();
        descripcionTxt.setText("");
        precioTxt.setText("");
        precio2Txt.setText("");
        precio3Txt.setText("");
        precio4Txt.setText("");
        precio5Txt.setText("");
        precio6Txt.setText("");
        precio7Txt.setText("");
        impuestoTxt.setText("");
        sugeridoTxt.setText("");
        stockEntranteTxt.setText("");
        stockMinimoTxt.setText("");
        puntoPedidoTxt.setText("");
        stockMaximoTxt.setText("");
        stockActualTxt.setText("");
        porcentaje2Txt.setText("");
        porcentaje3Txt.setText("");
        porcentaje4Txt.setText("");
        porcentaje5Txt.setText("");
        porcentaje6Txt.setText("");
        porcentaje7Txt.setText("");
        unidadFraccionTxt.setText("");
        unidadCajaTxt.setText("");
        cantidadPorBultoTxt.setText("");
        descuentoCTxt.setText("");
        descuentoBTxt.setText("");
        costoUnitarioTxt.setText("");
        costoCajaTxt.setText("");
        costoBultoTxt.setText("");
        porcentajeTxt.setText("");
        fechaTxt.setText("");
        comboC.removeAllItems();
        comboC.addItem("");
        comboP.removeAllItems();
        comboP.addItem("");
        comboR.removeAllItems();
        comboR.addItem("");
        comboSR.removeAllItems();
        comboSR.addItem("");
        comboI.removeAllItems();
        comboI.addItem("");
        bloquearCamposStock();
    }

    private void grabar() {
        if (validar()) {
            Producto2 producto = new Producto2();
            Stock stock = new Stock();
            Precio precio = new Precio();
            int rowIva = 0; //comboI.getSelectedIndex(x -1);
            int rowProveedor = comboP.getSelectedIndex();
            int rowRubro = comboR.getSelectedIndex();
            int rowSR = comboSR.getSelectedIndex();
            int rowsC = comboC.getItemCount();
            PorcentajeIva alicuota = ivas.get(rowIva);
            Rubro2 rubro = rubros.get(rowRubro -1);
            SubRubro2 subRubro = subRubros.get(rowSR -1);
            Proveedor2 proveedor = proveedores.get(rowProveedor -1);
            int bulto = Integer.valueOf(cantidadPorBultoTxt.getText());
            int caja = Integer.valueOf(unidadCajaTxt.getText());
            int puntoPedido = Integer.valueOf(puntoPedidoTxt.getText());
            int stockActual = Integer.valueOf(stockActualTxt.getText());
            int stockMinimo = Integer.valueOf(stockMinimoTxt.getText());
            int unidadFraccion = Integer.valueOf(unidadFraccionTxt.getText());
            Double costo = Double.valueOf(costoUnitarioTxt.getText());
            Double impuesto = Double.valueOf(impuestoTxt.getText());
            Float porcentaje1 = Float.valueOf(porcentajeTxt.getText());
            Float porcentaje2 = Float.valueOf(porcentaje2Txt.getText());
            Float porcentaje3 = Float.valueOf(porcentaje3Txt.getText());
            Float porcentaje4 = Float.valueOf(porcentaje4Txt.getText());
            Float porcentaje5 = Float.valueOf(porcentaje5Txt.getText());
            Float porcentaje6 = Float.valueOf(porcentaje6Txt.getText());
            Float porcentaje7 = Float.valueOf(porcentaje7Txt.getText());
            Double precio1 = Double.valueOf(precioTxt.getText());
            Double precio2 = Double.valueOf(precio2Txt.getText());
            Double precio3 = Double.valueOf(precio3Txt.getText());
            Double precio4 = Double.valueOf(precio4Txt.getText());
            Double precio5 = Double.valueOf(precio5Txt.getText());
            Double precio6 = Double.valueOf(precio6Txt.getText());
            Double precio7 = Double.valueOf(precio7Txt.getText());
            Double sugerido = Double.valueOf(sugeridoTxt.getText());
            int codigo = Integer.valueOf(codigoTxt.getText());
            Date fechaActualiz = new Date();
            Time horaActualiz;
            int hs = horaActualiz.getHours();
            horaActualiz = new Time();
            stock.setBulto(bulto);
            stock.setCaja(caja);
            stock.setPuntoPedido(puntoPedido);
            stock.setStockActual(stockActual);
            stock.setStockMinimo(stockMinimo);
            stock.setUnidad(unidadFraccion);
            precio.setCosto(costo);
            precio.setFechaActualizacion(new Date());
            precio.setHoraActualizacion(new Time());
            precio.setImpuesto(impuesto);
            precio.setPorcentaje1(porcentaje1);
            precio.setPorcentaje2(porcentaje2);
            precio.setPorcentaje3(porcentaje3);
            precio.setPorcentaje4(porcentaje4);
            precio.setPorcentaje5(porcentaje5);
            precio.setPorcentaje6(porcentaje6);
            precio.setPorcentaje7(porcentaje7);
            precio.setPorcentajeIva(alicuota);
            precio.setPrecio1(precio1);
            precio.setPrecio2(precio2);
            precio.setPrecio3(precio3);
            precio.setPrecio4(precio4);
            precio.setPrecio5(precio5);
            precio.setPrecio6(precio6);
            precio.setPrecio7(precio7);
            precio.setSugerido(sugerido);
            producto.setActivo(true);
            producto.setActualizarGondola(true);
            producto.setActualizarListaPrecios(true);
            producto.setActualizarWeb(true);
            producto.setCodigo(codigo);
            producto.setDetalle(descripcionTxt.getText());
            producto.setFechaActualiz(fechaActualiz);
            producto.setHoraActualiz(horaActualiz);
            producto.setListaPdf(true);
            producto.setPrecio(precio);
            producto.setProveedor(proveedor);
            producto.setRubro(rubro);
            producto.setSubRubro(subRubro);
            producto.setStock(stock);
            
        }
    }

    private boolean validar() {
        int rowR = comboR.getSelectedIndex();
        if (rowR < 1) {
            JOptionPane.showMessageDialog(this, "DEBE SELECCIONAR UN RUBRO");
            comboR.requestFocus();
            return false;
        }
        int rowSR = comboSR.getSelectedIndex();
        if (rowSR < 1) {
            JOptionPane.showMessageDialog(this, "DEBE SELECCIONAR UN SUB-RUBRO");
            comboSR.requestFocus();
            return false;
        }
        int rowP = comboP.getSelectedIndex();
        if (rowP < 1) {
            JOptionPane.showMessageDialog(this, "DEBE SELECCIONAR UN PROVEEDOR");
            comboP.requestFocus();
            return false;
        }
        if (descripcionTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "INGRESE UNA DESCRIPCION");
            descripcionTxt.requestFocus();
            return false;
        }
        if(precioTxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "INGRESE UN PRECIO");
            precioTxt.requestFocus();
            return false;
        }
        if(costoUnitarioTxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "INGRESE UN COSTO UNITARIO");
            costoUnitarioTxt.requestFocus();
            return false;
        }
        if(porcentajeTxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "INGRESE UN COSTO UNITARIO");
            porcentajeTxt.requestFocus();
            return false;
        }
        return true;
    }

    private void llenarCombos() {
        proveedores = null;
        try {
            proveedores = new Proveedor2Service().getProveedoresActivos();
        } catch (Exception ex) {
            Logger.getLogger(NuevoProductoFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (proveedores != null && !proveedores.isEmpty()) {
            for (Proveedor2 p2 : proveedores) {
                comboP.addItem(p2.getNombre());
            }
        }
        rubros = null;
        try {
            rubros = new Rubro2Service().getRubrosActivosOrdenados();
        } catch (Exception ex) {
            Logger.getLogger(NuevoProductoFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Rubro2 r2 : rubros) {
            comboR.addItem(r2.getNombre());
        }
        subRubros = null;
        try {
            subRubros = new SubRubro2Service().getRubrosActivosOrdenados();
        } catch (Exception ex) {
            Logger.getLogger(NuevoProductoFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (SubRubro2 sr2 : subRubros) {
            comboSR.addItem(sr2.getNombre());
        }
        ivas = null;
        try {
            ivas = new PorcentajeIvaService().getAllPorcentajeIva();
        } catch (Exception ex) {
            Logger.getLogger(NuevoProductoFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        for(PorcentajeIva pi:ivas){
            comboI.addItem(pi.getDetalle());
        }
    }

    private void calcularPrecio() {
        BigDecimal bd_porcentaje = new BigDecimal("0.00");
        bd_porcentaje.setScale(3);
        if (porcentajeTxt.getText().isEmpty()) {
            porcentajeTxt.setText("0");
        }
        bd_porcentaje = new BigDecimal(porcentajeTxt.getText().replace(",", "."));
        if (!costoUnitarioTxt.getText().isEmpty()) {
            BigDecimal bd_costoUnitario = new BigDecimal(costoUnitarioTxt.getText().replace(",", "."));
            BigDecimal bd_porcentajeDividCienMasUno = bd_porcentaje.divide(new BigDecimal("100"));
            bd_porcentajeDividCienMasUno = bd_porcentajeDividCienMasUno.add(new BigDecimal("1"));
            BigDecimal bd_precioCalculado = bd_costoUnitario.multiply(bd_porcentajeDividCienMasUno);
            Double precio = bd_precioCalculado.doubleValue();
            precioTxt.setText(df3.format(precio));
        } else {
            costoUnitarioTxt.setText("0");
        }
    }

    private void calcularPrecioLista2() {
        BigDecimal bd_porcentajeLista2 = new BigDecimal("0.00");
        bd_porcentajeLista2.setScale(3);
        if (porcentaje2Txt.getText().isEmpty()) {
            porcentaje2Txt.setText("0");
        }
        bd_porcentajeLista2 = new BigDecimal(porcentaje2Txt.getText().replace(",", "."));
        if (!precioTxt.getText().isEmpty()) {
            BigDecimal bd_costoUnitario = new BigDecimal(precioTxt.getText().replace(",", "."));
            BigDecimal bd_porcentajeList2DividCienMasUno = bd_porcentajeLista2.divide(new BigDecimal("100"));
            bd_porcentajeList2DividCienMasUno = bd_porcentajeList2DividCienMasUno.add(new BigDecimal("1"));
            BigDecimal bd_precioLista2Calculado = bd_costoUnitario.multiply(bd_porcentajeList2DividCienMasUno);
            Double precio = bd_precioLista2Calculado.doubleValue();
            precio2Txt.setText(df3.format(precio));
        } else {
            precioTxt.setText("0");
        }
    }

    private void calcularPrecioLista3() {
        BigDecimal bd_porcentajeLista3 = new BigDecimal("0.00");
        bd_porcentajeLista3.setScale(3);
        if (porcentaje3Txt.getText().isEmpty()) {
            porcentaje3Txt.setText("0");
        }
        bd_porcentajeLista3 = new BigDecimal(porcentaje3Txt.getText().replace(",", "."));
        if (!precioTxt.getText().isEmpty()) {
            BigDecimal bd_costoUnitario = new BigDecimal(precioTxt.getText().replace(",", "."));
            BigDecimal bd_porcentajeList3DividCienMasUno = bd_porcentajeLista3.divide(new BigDecimal("100"));
            bd_porcentajeList3DividCienMasUno = bd_porcentajeList3DividCienMasUno.add(new BigDecimal("1"));
            BigDecimal bd_precioLista3Calculado = bd_costoUnitario.multiply(bd_porcentajeList3DividCienMasUno);
            Double precio = bd_precioLista3Calculado.doubleValue();
            precio3Txt.setText(df3.format(precio));
        } else {
            precioTxt.setText("0");
        }
    }

    private void calcularPrecioLista4() {
        BigDecimal bd_porcentajeLista4 = new BigDecimal("0.00");
        bd_porcentajeLista4.setScale(3);
        if (porcentaje4Txt.getText().isEmpty()) {
            porcentaje4Txt.setText("0");
        }
        bd_porcentajeLista4 = new BigDecimal(porcentaje4Txt.getText().replace(",", "."));
        if (!precioTxt.getText().isEmpty()) {
            BigDecimal bd_costoUnitario = new BigDecimal(precioTxt.getText().replace(",", "."));
            BigDecimal bd_porcentajeList4DividCienMasUno = bd_porcentajeLista4.divide(new BigDecimal("100"));
            bd_porcentajeList4DividCienMasUno = bd_porcentajeList4DividCienMasUno.add(new BigDecimal("1"));
            BigDecimal bd_precioLista4Calculado = bd_costoUnitario.multiply(bd_porcentajeList4DividCienMasUno);
            Double precio = bd_precioLista4Calculado.doubleValue();
            precio4Txt.setText(df3.format(precio));
        } else {
            precioTxt.setText("0");
        }
    }

    private void calcularPrecioLista5() {
        BigDecimal bd_porcentajeLista5 = new BigDecimal("0.00");
        bd_porcentajeLista5.setScale(3);
        if (porcentaje5Txt.getText().isEmpty()) {
            porcentaje5Txt.setText("0");
        }
        bd_porcentajeLista5 = new BigDecimal(porcentaje5Txt.getText().replace(",", "."));
        if (!costoUnitarioTxt.getText().isEmpty()) {
            BigDecimal bd_costoUnitario = new BigDecimal(costoUnitarioTxt.getText().replace(",", "."));
            BigDecimal bd_porcentajeList5DividCienMasUno = bd_porcentajeLista5.divide(new BigDecimal("100"));
            bd_porcentajeList5DividCienMasUno = bd_porcentajeList5DividCienMasUno.add(new BigDecimal("1"));
            BigDecimal bd_precioLista5Calculado = bd_costoUnitario.multiply(bd_porcentajeList5DividCienMasUno);
            Double precio = bd_precioLista5Calculado.doubleValue();
            precio5Txt.setText(df3.format(precio));
        } else {
            costoUnitarioTxt.setText("0");
        }
    }

    private void calcularPrecioLista6() {
        BigDecimal bd_porcentajeLista6 = new BigDecimal("0.00");
        bd_porcentajeLista6.setScale(3);
        if (porcentaje6Txt.getText().isEmpty()) {
            porcentaje6Txt.setText("0");
        }
        bd_porcentajeLista6 = new BigDecimal(porcentaje6Txt.getText().replace(",", "."));
        if (!costoUnitarioTxt.getText().isEmpty()) {
            BigDecimal bd_costoUnitario = new BigDecimal(costoUnitarioTxt.getText().replace(",", "."));
            BigDecimal bd_porcentajeList6DividCienMasUno = bd_porcentajeLista6.divide(new BigDecimal("100"));
            bd_porcentajeList6DividCienMasUno = bd_porcentajeList6DividCienMasUno.add(new BigDecimal("1"));
            BigDecimal bd_precioLista6Calculado = bd_costoUnitario.multiply(bd_porcentajeList6DividCienMasUno);
            Double precio = bd_precioLista6Calculado.doubleValue();
            precio6Txt.setText(df3.format(precio));
        } else {
            costoUnitarioTxt.setText("0");
        }
    }

    private void calcularPrecioLista7() {
        BigDecimal bd_porcentajeLista7 = new BigDecimal("0.00");
        bd_porcentajeLista7.setScale(3);
        if (porcentaje7Txt.getText().isEmpty()) {
            porcentaje7Txt.setText("0");
        }
        bd_porcentajeLista7 = new BigDecimal(porcentaje7Txt.getText().replace(",", "."));
        if (!costoUnitarioTxt.getText().isEmpty()) {
            BigDecimal bd_costoUnitario = new BigDecimal(costoUnitarioTxt.getText().replace(",", "."));
            BigDecimal bd_porcentajeList7DividCienMasUno = bd_porcentajeLista7.divide(new BigDecimal("100"));
            bd_porcentajeList7DividCienMasUno = bd_porcentajeList7DividCienMasUno.add(new BigDecimal("1"));
            BigDecimal bd_precioLista7Calculado = bd_costoUnitario.multiply(bd_porcentajeList7DividCienMasUno);
            Double precio = bd_precioLista7Calculado.doubleValue();
            precio7Txt.setText(df3.format(precio));
        } else {
            costoUnitarioTxt.setText("0");
        }
    }

    private void habilitarCamposStock() {
        stockEntranteTxt.setEditable(false);
        stockMinimoTxt.setEditable(false);
        puntoPedidoTxt.setEditable(false);
        stockMaximoTxt.setEditable(false);
        stockActualTxt.setEditable(false);
    }

    private void bloquearCamposStock() {
        stockEntranteTxt.setEditable(false);
        stockMinimoTxt.setEditable(false);
        puntoPedidoTxt.setEditable(false);
        stockMaximoTxt.setEditable(false);
        stockActualTxt.setEditable(false);
    }

    private Double calcularPreciosLista(Double importe) {
//        for (int i = 1; i < 8; i++) {
        Double importeResultado = calcularPrecioListaSobreFinal(importe, 1);
        return importeResultado;
//        }
//        calcularPrecioLista2();
//        calcularPrecioLista3();
//        calcularPrecioLista4();
//        calcularPrecioLista5();
//        calcularPrecioLista6();
//        calcularPrecioLista7();
    }

    private Double calcularPrecioListaSobreFinal(Double importe, int lista) {
        BigDecimal bd_porcentajeLista = new BigDecimal("0.00");
        bd_porcentajeLista.setScale(3);
        Double precio = 0.0;
        switch (lista) {
            case 1:
                if (porcentajeTxt.getText().isEmpty()) {
                    porcentajeTxt.setText("0");
                }
                bd_porcentajeLista = new BigDecimal(porcentajeTxt.getText().replace(",", "."));
                break;
            case 2:
                if (porcentaje2Txt.getText().isEmpty()) {
                    porcentaje2Txt.setText("0");
                }
                bd_porcentajeLista = new BigDecimal(porcentaje2Txt.getText().replace(",", "."));
                break;
            case 3:
                if (porcentaje3Txt.getText().isEmpty()) {
                    porcentaje3Txt.setText("0");
                }
                bd_porcentajeLista = new BigDecimal(porcentaje3Txt.getText().replace(",", "."));
                break;
            case 4:
                if (porcentaje4Txt.getText().isEmpty()) {
                    porcentaje4Txt.setText("0");
                }
                bd_porcentajeLista = new BigDecimal(porcentaje4Txt.getText().replace(",", "."));
                break;
            case 5:
                if (porcentaje5Txt.getText().isEmpty()) {
                    porcentaje5Txt.setText("0");
                }
                bd_porcentajeLista = new BigDecimal(porcentaje5Txt.getText().replace(",", "."));
                break;
            case 6:
                if (porcentaje6Txt.getText().isEmpty()) {
                    porcentaje6Txt.setText("0");
                }
                bd_porcentajeLista = new BigDecimal(porcentaje6Txt.getText().replace(",", "."));
                break;
            case 7:
                if (porcentaje7Txt.getText().isEmpty()) {
                    porcentaje7Txt.setText("0");
                }
                bd_porcentajeLista = new BigDecimal(porcentaje7Txt.getText().replace(",", "."));
                break;
        }
        if (lista > 4) {
            if (!precioTxt.getText().isEmpty()) {
                BigDecimal bd_costoUnitario = new BigDecimal(precioTxt.getText().replace(",", "."));
                BigDecimal bd_porcentajeListDividCienMasUno = bd_porcentajeLista.divide(new BigDecimal("100"));
                bd_porcentajeListDividCienMasUno = bd_porcentajeListDividCienMasUno.add(new BigDecimal("1"));
                BigDecimal bd_precioListaCalculado = bd_costoUnitario.multiply(bd_porcentajeListDividCienMasUno);
                precio = bd_precioListaCalculado.doubleValue();
//            precio2Txt.setText(df3.format(precio));
//            importeCalculado = precio;
            } else {
                precioTxt.setText("0");
            }
        } else {
            if (!costoUnitarioTxt.getText().isEmpty()) {
                BigDecimal bd_costoUnitario = new BigDecimal(costoUnitarioTxt.getText().replace(",", "."));
                BigDecimal bd_porcentajeListDividCienMasUno = bd_porcentajeLista.divide(new BigDecimal("100"));
                bd_porcentajeListDividCienMasUno = bd_porcentajeListDividCienMasUno.add(new BigDecimal("1"));
                BigDecimal bd_precioListaCalculado = bd_costoUnitario.multiply(bd_porcentajeListDividCienMasUno);
                precio = bd_precioListaCalculado.doubleValue();
//            precio2Txt.setText(df3.format(precio));
//            importeCalculado = precio;
            } else {
                precioTxt.setText("0");
            }
        }
        return precio;
    }

    private void calcularPrecio2() {
        if (!precioTxt.getText().isEmpty()) {
            BigDecimal bd_precioUnitario = new BigDecimal(precioTxt.getText().replace(",", "."));
            BigDecimal bd_porcentaje2 = new BigDecimal(porcentaje2Txt.getText().replace(",", "."));
            BigDecimal bd_porcentajeListDividCienMasUno = bd_porcentaje2.divide(new BigDecimal("100"));
            bd_porcentajeListDividCienMasUno = bd_porcentajeListDividCienMasUno.add(new BigDecimal("1"));
            BigDecimal bd_precio2Calculado = bd_precioUnitario.multiply(bd_porcentajeListDividCienMasUno);
            Double precio2 = bd_precio2Calculado.doubleValue();
            precio2Txt.setText(df3.format(precio2));
//            precioTxt.setText("0.00");
//            precio2Txt.setText("0.00");
        } else {

        }
    }

    private void calcularPrecio3() {
        if (!precioTxt.getText().isEmpty()) {
            BigDecimal bd_precioUnitario = new BigDecimal(precioTxt.getText().replace(",", "."));
            BigDecimal bd_porcentaje3 = new BigDecimal(porcentaje3Txt.getText().replace(",", "."));
            BigDecimal bd_porcentajeListDividCienMasUno = bd_porcentaje3.divide(new BigDecimal("100"));
            bd_porcentajeListDividCienMasUno = bd_porcentajeListDividCienMasUno.add(new BigDecimal("1"));
            BigDecimal bd_precio3Calculado = bd_precioUnitario.multiply(bd_porcentajeListDividCienMasUno);
            Double precio3 = bd_precio3Calculado.doubleValue();
            precio3Txt.setText(df3.format(precio3));
//            precioTxt.setText("0.00");
//            precio3Txt.setText("0.00");
        } else {

        }
    }

    private void calcularPrecio4() {
        if (!precioTxt.getText().isEmpty()) {
            BigDecimal bd_precioUnitario = new BigDecimal(precioTxt.getText().replace(",", "."));
            BigDecimal bd_porcentaje4 = new BigDecimal(porcentaje4Txt.getText().replace(",", "."));
            BigDecimal bd_porcentajeListDividCienMasUno = bd_porcentaje4.divide(new BigDecimal("100"));
            bd_porcentajeListDividCienMasUno = bd_porcentajeListDividCienMasUno.add(new BigDecimal("1"));
            BigDecimal bd_precio4Calculado = bd_precioUnitario.multiply(bd_porcentajeListDividCienMasUno);
            Double precio4 = bd_precio4Calculado.doubleValue();
            precio4Txt.setText(df3.format(precio4));
//            precioTxt.setText("0.00");
//            precio4Txt.setText("0.00");
        } else {

        }
    }

    private void calcularPrecio5() {
        if (!costoUnitarioTxt.getText().isEmpty()) {
            BigDecimal bd_costoUnitario = new BigDecimal(costoUnitarioTxt.getText().replace(",", "."));
            BigDecimal bd_porcentaje5 = new BigDecimal(porcentaje5Txt.getText().replace(",", "."));
            BigDecimal bd_porcentajeListDividCienMasUno = bd_porcentaje5.divide(new BigDecimal("100"));
            bd_porcentajeListDividCienMasUno = bd_porcentajeListDividCienMasUno.add(new BigDecimal("1"));
            BigDecimal bd_precio5Calculado = bd_costoUnitario.multiply(bd_porcentajeListDividCienMasUno);
            Double precio5 = bd_precio5Calculado.doubleValue();
            precio5Txt.setText(df3.format(precio5));
//            costoUnitarioTxt.setText("0.00");
//            precio5Txt.setText("0.00");
        } else {

        }
    }

    private void calcularPrecio6() {
        if (!costoUnitarioTxt.getText().isEmpty()) {
            BigDecimal bd_costoUnitario = new BigDecimal(costoUnitarioTxt.getText().replace(",", "."));
            BigDecimal bd_porcentaje6 = new BigDecimal(porcentaje6Txt.getText().replace(",", "."));
            BigDecimal bd_porcentajeListDividCienMasUno = bd_porcentaje6.divide(new BigDecimal("100"));
            bd_porcentajeListDividCienMasUno = bd_porcentajeListDividCienMasUno.add(new BigDecimal("1"));
            BigDecimal bd_precio6Calculado = bd_costoUnitario.multiply(bd_porcentajeListDividCienMasUno);
            Double precio6 = bd_precio6Calculado.doubleValue();
            precio6Txt.setText(df3.format(precio6));
//            costoUnitarioTxt.setText("0.00");
//            precio6Txt.setText("0.00");
        } else {

        }
    }

    private void calcularPrecio7() {
        if (!costoUnitarioTxt.getText().isEmpty()) {
            BigDecimal bd_costoUnitario = new BigDecimal(costoUnitarioTxt.getText().replace(",", "."));
            BigDecimal bd_porcentaje7 = new BigDecimal(porcentaje7Txt.getText().replace(",", "."));
            BigDecimal bd_porcentajeListDividCienMasUno = bd_porcentaje7.divide(new BigDecimal("100"));
            bd_porcentajeListDividCienMasUno = bd_porcentajeListDividCienMasUno.add(new BigDecimal("1"));
            BigDecimal bd_precio7Calculado = bd_costoUnitario.multiply(bd_porcentajeListDividCienMasUno);
            Double precio7 = bd_precio7Calculado.doubleValue();
            precio7Txt.setText(df3.format(precio7));
//            costoUnitarioTxt.setText("0.00");
//            precio7Txt.setText("0.00");
        } else {

        }
    }

    private void calcularPorcentual2() {
        if (!precio2Txt.getText().isEmpty()) {
            if (!precioTxt.getText().isEmpty()) {
                Double precio = Double.valueOf(precioTxt.getText().replace(",", "."));
                Double precio2 = Double.valueOf(precio2Txt.getText().replace(",", "."));
                Double resultado0 = precio2 / precio;
                Double resultado1 = resultado0 - 1;
                Double resultado2 = resultado1 * 100;
                String por2 = df3.format(resultado2);
                porcentaje2Txt.setText(por2);
            }
        }
    }

    private void calcularPorcentual5() {
        if (!precio5Txt.getText().isEmpty()) {
            if (!costoUnitarioTxt.getText().isEmpty()) {
                Double precio = Double.valueOf(costoUnitarioTxt.getText().replace(",", "."));
                Double precio5 = Double.valueOf(precio5Txt.getText().replace(",", "."));
                Double resultado0 = precio5 / precio;
                Double resultado1 = resultado0 - 1;
                Double resultado2 = resultado1 * 100;
                String por5 = df3.format(resultado2);
                porcentaje5Txt.setText(por5);
            }
        }
    }

    private void calcularPorcentual6() {
        if (!precio6Txt.getText().isEmpty()) {
            if (!costoUnitarioTxt.getText().isEmpty()) {
                Double precio = Double.valueOf(costoUnitarioTxt.getText().replace(",", "."));
                Double precio6 = Double.valueOf(precio6Txt.getText().replace(",", "."));
                Double resultado0 = precio6 / precio;
                Double resultado1 = resultado0 - 1;
                Double resultado2 = resultado1 * 100;
                String por6 = df3.format(resultado2);
                porcentaje6Txt.setText(por6);
            }
        }
    }

    private void calcularPorcentual7() {
        if (!precio7Txt.getText().isEmpty()) {
            if (!costoUnitarioTxt.getText().isEmpty()) {
                Double precio = Double.valueOf(costoUnitarioTxt.getText().replace(",", "."));
                Double precio7 = Double.valueOf(precio7Txt.getText().replace(",", "."));
                Double resultado0 = precio7 / precio;
                Double resultado1 = resultado0 - 1;
                Double resultado2 = resultado1 * 100;
                String por7 = df3.format(resultado2);
                porcentaje7Txt.setText(por7);
            }
        }
    }

    private void calcularPorcentual3() {
        if (!precio3Txt.getText().isEmpty()) {
            if (!precioTxt.getText().isEmpty()) {
                Double precio = Double.valueOf(precioTxt.getText().replace(",", "."));
                Double precio3 = Double.valueOf(precio3Txt.getText().replace(",", "."));
                Double resultado0 = precio3 / precio;
                Double resultado1 = resultado0 - 1;
                Double resultado2 = resultado1 * 100;
                String por3 = df3.format(resultado2);
                porcentaje3Txt.setText(por3);
            }
        }
    }

    private void calcularPorcentual4() {
        if (!precio4Txt.getText().isEmpty()) {
            if (!precioTxt.getText().isEmpty()) {
                Double precio = Double.valueOf(precioTxt.getText().replace(",", "."));
                Double precio4 = Double.valueOf(precio4Txt.getText().replace(",", "."));
                Double resultado0 = precio4 / precio;
                Double resultado1 = resultado0 - 1;
                Double resultado2 = resultado1 * 100;
                String por4 = df3.format(resultado2);
                porcentaje4Txt.setText(por4);
            }
        }
    }
}
