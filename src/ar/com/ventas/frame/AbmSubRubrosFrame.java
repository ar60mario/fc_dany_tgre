package ar.com.ventas.frame;

import ar.com.ventas.entities.SubRubro2;
import ar.com.ventas.entities.Usuario;
import ar.com.ventas.main.MainFrame;
import ar.com.ventas.services.SubRubro2Service;
import ar.com.ventas.services.UsuarioService;
import ar.com.ventas.structure.Constantes;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrador
 */
public class AbmSubRubrosFrame extends javax.swing.JFrame {

    private List<SubRubro2> listaSubRubro = new ArrayList();
//    private Integer order_num;
//    private String order_name;

    /**
     * Creates new form AbmSubRubroFrame
     */
    public AbmSubRubrosFrame() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(Constantes.getR(),
                Constantes.getG(),
                Constantes.getB()));
        this.llenarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        volverBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        subRubroTabla = new javax.swing.JTable();
        nuevoBtn = new javax.swing.JButton();
        modificarBtn = new javax.swing.JButton();
        borrarBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        archivoMenu = new javax.swing.JMenu();
        nuevoMenuBtn = new javax.swing.JMenuItem();
        modificarMenuBtn = new javax.swing.JMenuItem();
        eliminarMenuBtn = new javax.swing.JMenuItem();
        volverMenuBtn = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("ABM SUB-RUBROS");

        volverBtn.setText("Volver");
        volverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBtnActionPerformed(evt);
            }
        });

        subRubroTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(subRubroTabla);

        nuevoBtn.setText("Nuevo");
        nuevoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoBtnActionPerformed(evt);
            }
        });

        modificarBtn.setText("Modificar");
        modificarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarBtnActionPerformed(evt);
            }
        });

        borrarBtn.setText("Borrar");
        borrarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarBtnActionPerformed(evt);
            }
        });

        archivoMenu.setText("Archivo");

        nuevoMenuBtn.setText("nuevo");
        nuevoMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoMenuBtnActionPerformed(evt);
            }
        });
        archivoMenu.add(nuevoMenuBtn);

        modificarMenuBtn.setText("modificar");
        modificarMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarMenuBtnActionPerformed(evt);
            }
        });
        archivoMenu.add(modificarMenuBtn);

        eliminarMenuBtn.setText("eliminar");
        eliminarMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarMenuBtnActionPerformed(evt);
            }
        });
        archivoMenu.add(eliminarMenuBtn);

        jMenuBar1.add(archivoMenu);

        volverMenuBtn.setText("Volver");
        volverMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverMenuBtnActionPerformed(evt);
            }
        });
        jMenuBar1.add(volverMenuBtn);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(nuevoBtn)
                        .addGap(18, 18, 18)
                        .addComponent(modificarBtn)
                        .addGap(18, 18, 18)
                        .addComponent(borrarBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                        .addComponent(volverBtn))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(volverBtn)
                    .addComponent(nuevoBtn)
                    .addComponent(modificarBtn)
                    .addComponent(borrarBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBtnActionPerformed
        MainFrame mainFrame = new MainFrame();
        mainFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_volverBtnActionPerformed

    private void volverMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverMenuBtnActionPerformed
        MainFrame mf = new MainFrame();
        mf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_volverMenuBtnActionPerformed

    private void modificarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarBtnActionPerformed
//        FileReader fr = null;
//        try {
//            fr = new FileReader("c:/Users/permisos.txt");
//        } catch (FileNotFoundException ex) {
//            Logger.getLogger(AbmSubRubrosFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        BufferedReader br = new BufferedReader(fr);
//        String acceso = "";
//        try {
//            acceso = br.readLine();
//        } catch (IOException ex) {
//            Logger.getLogger(AbmSubRubrosFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        try {
//            br.close();
//        } catch (IOException ex) {
//            Logger.getLogger(AbmSubRubrosFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        if (acceso.equals("1")) {
        modificar();
//        } else {
//            if (acceso.equals("3")) {
//                try {
//                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
//                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
//                }
//                JTextField field = new JTextField("");
//                field.setFont(new Font("Tahoma", Font.PLAIN, 11));
//                String[] options = {"Ingresar", "Regresar"};
//                int result = JOptionPane.showOptionDialog(
//                        null,
//                        field,
//                        "Autorizaci√≥n de USUARIO",
//                        JOptionPane.OK_CANCEL_OPTION,
//                        JOptionPane.QUESTION_MESSAGE,
//                        null,
//                        options,
//                        0);
//                switch (result) {
//                    case 0:
//                        int cod = Integer.valueOf(field.getText());
//                        Usuario usu = null;
//                        try {
//                            usu = new UsuarioService().getUsuarioByCodigo(cod);
//                        } catch (Exception ex) {
//                            Logger.getLogger(AbmSubRubrosFrame.class.getName()).log(Level.SEVERE, null, ex);
//                        }
//                        if (usu != null) {
//                            int cla = usu.getNivel();
//                            if (usu.getActivo()) {
//                                if (cla > 3) {
//                                    JOptionPane.showMessageDialog(this, "Acceso Prohibido");
//                                    break;
//                                }
//                                Date a = new Date();
//                                if (cla == 2) {
//                                    if (usu.getFecha() != null) {
//                                        Date b = usu.getFecha();
//                                        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
//                                        if (!sdf.format(a).equals(sdf.format(b))) {
//                                            JOptionPane.showMessageDialog(this, "Acceso Vencido");
//                                            break;
//                                        }
//                                    }
//                                }
//                                JTextField field2 = new JTextField("");
//                                field2.setFont(new Font("Symbol", Font.PLAIN, 12));
//                                String[] opts = {"Ingresar", "Regresar"};
//                                int resulta = JOptionPane.showOptionDialog(
//                                        null,
//                                        field2,
//                                        "CONTRASE√ëA: " + usu.getNombre() + ", Autorizaci√≥n",
//                                        JOptionPane.OK_CANCEL_OPTION,
//                                        JOptionPane.QUESTION_MESSAGE,
//                                        null,
//                                        opts,
//                                        0);
//                                switch (resulta) {
//                                    case 0:
//                                        int contra = Integer.valueOf(field2.getText());
//                                        if (contra == usu.getContrasena()) {
//                                            modificar();
//                                        } else {
//                                            JOptionPane.showMessageDialog(this, "Contrase√±a incorrecta");
//                                        }
//                                        break;
//                                }
//                            } else {
//                                JOptionPane.showMessageDialog(this, "USUARIO Inactivo");
//                            }
//                        } else {
//                            JOptionPane.showMessageDialog(this, "No existe el Usuario");
//                        }
//                        break;
//                }
//            }
//        }
    }//GEN-LAST:event_modificarBtnActionPerformed

    private void nuevoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoBtnActionPerformed
//        FileReader fr = null;
//        try {
//            fr = new FileReader("c:/Users/permisos.txt");
//        } catch (FileNotFoundException ex) {
//            Logger.getLogger(AbmSubRubrosFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        BufferedReader br = new BufferedReader(fr);
//        String acceso = "";
//        try {
//            acceso = br.readLine();
//        } catch (IOException ex) {
//            Logger.getLogger(AbmSubRubrosFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        try {
//            br.close();
//        } catch (IOException ex) {
//            Logger.getLogger(AbmSubRubrosFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        if (acceso.equals("1")) {
        nuevo();
//        } else {
//            if (acceso.equals("3")) {
//                try {
//                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
//                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
//                }
//                JTextField field = new JTextField("");
//                field.setFont(new Font("Tahoma", Font.PLAIN, 11));
//                String[] options = {"Ingresar", "Regresar"};
//                int result = JOptionPane.showOptionDialog(
//                        null,
//                        field,
//                        "Autorizaci√≥n de USUARIO",
//                        JOptionPane.OK_CANCEL_OPTION,
//                        JOptionPane.QUESTION_MESSAGE,
//                        null,
//                        options,
//                        0);
//                switch (result) {
//                    case 0:
//                        int cod = Integer.valueOf(field.getText());
//                        Usuario usu = null;
//                        try {
//                            usu = new UsuarioService().getUsuarioByCodigo(cod);
//                        } catch (Exception ex) {
//                            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
//                        }
//                        if (usu != null) {
//                            int cla = usu.getNivel();
//                            if (usu.getActivo()) {
//                                if (cla > 3) {
//                                    JOptionPane.showMessageDialog(this, "Acceso Prohibido");
//                                    break;
//                                }
//                                Date a = new Date();
//                                if (cla == 2) {
//                                    if (usu.getFecha() != null) {
//                                        Date b = usu.getFecha();
//                                        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
//                                        if (!sdf.format(a).equals(sdf.format(b))) {
//                                            JOptionPane.showMessageDialog(this, "Acceso Vencido");
//                                            break;
//                                        }
//                                    }
//                                }
//                                JTextField field2 = new JTextField("");
//                                field2.setFont(new Font("Symbol", Font.PLAIN, 12));
//                                String[] opts = {"Ingresar", "Regresar"};
//                                int resulta = JOptionPane.showOptionDialog(
//                                        null,
//                                        field2,
//                                        "CONTRASE√ëA: " + usu.getNombre() + ", Autorizaci√≥n",
//                                        JOptionPane.OK_CANCEL_OPTION,
//                                        JOptionPane.QUESTION_MESSAGE,
//                                        null,
//                                        opts,
//                                        0);
//                                switch (resulta) {
//                                    case 0:
//                                        int contra = Integer.valueOf(field2.getText());
//                                        if (contra == usu.getContrasena()) {
//                                            nuevo();
//                                        } else {
//                                            JOptionPane.showMessageDialog(this, "Contrase√±a incorrecta");
//                                        }
//                                        break;
//                                }
//                            } else {
//                                JOptionPane.showMessageDialog(this, "USUARIO Inactivo");
//                            }
//                        } else {
//                            JOptionPane.showMessageDialog(this, "No existe el Usuario");
//                        }
//                        break;
//                }
//            }
//        }


    }//GEN-LAST:event_nuevoBtnActionPerformed

    private void borrarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarBtnActionPerformed
//        FileReader fr = null;
//        try {
//            fr = new FileReader("c:/Users/permisos.txt");
//        } catch (FileNotFoundException ex) {
//            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        BufferedReader br = new BufferedReader(fr);
//        String acceso = "";
//        try {
//            acceso = br.readLine();
//        } catch (IOException ex) {
//            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        try {
//            br.close();
//        } catch (IOException ex) {
//            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        if (acceso.equals("1")) {
//            borrarSubrubroSeleccionado();
//        } else {
//            if (acceso.equals("3")) {
//                try {
//                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
//                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
//                }
//                JTextField field = new JTextField("");
//                field.setFont(new Font("Tahoma", Font.PLAIN, 11));
//                String[] options = {"Ingresar", "Regresar"};
//                int result = JOptionPane.showOptionDialog(
//                        null,
//                        field,
//                        "Autorizaci√≥n de USUARIO",
//                        JOptionPane.OK_CANCEL_OPTION,
//                        JOptionPane.QUESTION_MESSAGE,
//                        null,
//                        options,
//                        0);
//                switch (result) {
//                    case 0:
//                        int cod = Integer.valueOf(field.getText());
//                        Usuario usu = null;
//                        try {
//                            usu = new UsuarioService().getUsuarioByCodigo(cod);
//                        } catch (Exception ex) {
//                            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
//                        }
//                        if (usu != null) {
//                            int cla = usu.getNivel();
//                            if (usu.getActivo()) {
//                                if (cla > 3) {
//                                    JOptionPane.showMessageDialog(this, "Acceso Prohibido");
//                                    break;
//                                }
//                                Date a = new Date();
//                                if (cla == 2) {
//                                    if (usu.getFecha() != null) {
//                                        Date b = usu.getFecha();
//                                        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
//                                        if (!sdf.format(a).equals(sdf.format(b))) {
//                                            JOptionPane.showMessageDialog(this, "Acceso Vencido");
//                                            break;
//                                        }
//                                    }
//                                }
//                                JTextField field2 = new JTextField("");
//                                field2.setFont(new Font("Symbol", Font.PLAIN, 12));
//                                String[] opts = {"Ingresar", "Regresar"};
//                                int resulta = JOptionPane.showOptionDialog(
//                                        null,
//                                        field2,
//                                        "CONTRASE√ëA: " + usu.getNombre() + ", Autorizaci√≥n",
//                                        JOptionPane.OK_CANCEL_OPTION,
//                                        JOptionPane.QUESTION_MESSAGE,
//                                        null,
//                                        opts,
//                                        0);
//                                switch (resulta) {
//                                    case 0:
//                                        int contra = Integer.valueOf(field2.getText());
//                                        if (contra == usu.getContrasena()) {
//                                            borrarSubrubroSeleccionado();
//                                        } else {
//                                            JOptionPane.showMessageDialog(this, "Contrase√±a incorrecta");
//                                        }
//                                        break;
//                                }
//                            } else {
//                                JOptionPane.showMessageDialog(this, "USUARIO Inactivo");
//                            }
//                        } else {
//                            JOptionPane.showMessageDialog(this, "No existe el Usuario");
//                        }
//                        break;
//                }
//            }
//        }

    }//GEN-LAST:event_borrarBtnActionPerformed

    private void eliminarMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarMenuBtnActionPerformed
//        FileReader fr = null;
//        try {
//            fr = new FileReader("c:/Users/permisos.txt");
//        } catch (FileNotFoundException ex) {
//            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        BufferedReader br = new BufferedReader(fr);
//        String acceso = "";
//        try {
//            acceso = br.readLine();
//        } catch (IOException ex) {
//            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        try {
//            br.close();
//        } catch (IOException ex) {
//            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        if (acceso.equals("1")) {
//            borrarSubrubroSeleccionado();
//        } else {
//            if (acceso.equals("3")) {
//                try {
//                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
//                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
//                }
//                JTextField field = new JTextField("");
//                field.setFont(new Font("Tahoma", Font.PLAIN, 11));
//                String[] options = {"Ingresar", "Regresar"};
//                int result = JOptionPane.showOptionDialog(
//                        null,
//                        field,
//                        "Autorizaci√≥n de USUARIO",
//                        JOptionPane.OK_CANCEL_OPTION,
//                        JOptionPane.QUESTION_MESSAGE,
//                        null,
//                        options,
//                        0);
//                switch (result) {
//                    case 0:
//                        int cod = Integer.valueOf(field.getText());
//                        Usuario usu = null;
//                        try {
//                            usu = new UsuarioService().getUsuarioByCodigo(cod);
//                        } catch (Exception ex) {
//                            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
//                        }
//                        if (usu != null) {
//                            int cla = usu.getNivel();
//                            if (usu.getActivo()) {
//                                if (cla > 3) {
//                                    JOptionPane.showMessageDialog(this, "Acceso Prohibido");
//                                    break;
//                                }
//                                Date a = new Date();
//                                if (cla == 2) {
//                                    if (usu.getFecha() != null) {
//                                        Date b = usu.getFecha();
//                                        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
//                                        if (!sdf.format(a).equals(sdf.format(b))) {
//                                            JOptionPane.showMessageDialog(this, "Acceso Vencido");
//                                            break;
//                                        }
//                                    }
//                                }
//                                JTextField field2 = new JTextField("");
//                                field2.setFont(new Font("Symbol", Font.PLAIN, 12));
//                                String[] opts = {"Ingresar", "Regresar"};
//                                int resulta = JOptionPane.showOptionDialog(
//                                        null,
//                                        field2,
//                                        "CONTRASE√ëA: " + usu.getNombre() + ", Autorizaci√≥n",
//                                        JOptionPane.OK_CANCEL_OPTION,
//                                        JOptionPane.QUESTION_MESSAGE,
//                                        null,
//                                        opts,
//                                        0);
//                                switch (resulta) {
//                                    case 0:
//                                        int contra = Integer.valueOf(field2.getText());
//                                        if (contra == usu.getContrasena()) {
//                                            borrarSubrubroSeleccionado();
//                                        } else {
//                                            JOptionPane.showMessageDialog(this, "Contrase√±a incorrecta");
//                                        }
//                                        break;
//                                }
//                            } else {
//                                JOptionPane.showMessageDialog(this, "USUARIO Inactivo");
//                            }
//                        } else {
//                            JOptionPane.showMessageDialog(this, "No existe el Usuario");
//                        }
//                        break;
//                }
//            }
//        }
    }//GEN-LAST:event_eliminarMenuBtnActionPerformed

    private void modificarMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarMenuBtnActionPerformed
//        FileReader fr = null;
//        try {
//            fr = new FileReader("c:/Users/permisos.txt");
//        } catch (FileNotFoundException ex) {
//            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        BufferedReader br = new BufferedReader(fr);
//        String acceso = "";
//        try {
//            acceso = br.readLine();
//        } catch (IOException ex) {
//            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        try {
//            br.close();
//        } catch (IOException ex) {
//            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        if (acceso.equals("1")) {
        modificar();
//        } else {
//            if (acceso.equals("3")) {
//                try {
//                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
//                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
//                }
//                JTextField field = new JTextField("");
//                field.setFont(new Font("Tahoma", Font.PLAIN, 11));
//                String[] options = {"Ingresar", "Regresar"};
//                int result = JOptionPane.showOptionDialog(
//                        null,
//                        field,
//                        "Autorizaci√≥n de USUARIO",
//                        JOptionPane.OK_CANCEL_OPTION,
//                        JOptionPane.QUESTION_MESSAGE,
//                        null,
//                        options,
//                        0);
//                switch (result) {
//                    case 0:
//                        int cod = Integer.valueOf(field.getText());
//                        Usuario usu = null;
//                        try {
//                            usu = new UsuarioService().getUsuarioByCodigo(cod);
//                        } catch (Exception ex) {
//                            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
//                        }
//                        if (usu != null) {
//                            int cla = usu.getNivel();
//                            if (usu.getActivo()) {
//                                if (cla > 3) {
//                                    JOptionPane.showMessageDialog(this, "Acceso Prohibido");
//                                    break;
//                                }
//                                Date a = new Date();
//                                if (cla == 2) {
//                                    if (usu.getFecha() != null) {
//                                        Date b = usu.getFecha();
//                                        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
//                                        if (!sdf.format(a).equals(sdf.format(b))) {
//                                            JOptionPane.showMessageDialog(this, "Acceso Vencido");
//                                            break;
//                                        }
//                                    }
//                                }
//                                JTextField field2 = new JTextField("");
//                                field2.setFont(new Font("Symbol", Font.PLAIN, 12));
//                                String[] opts = {"Ingresar", "Regresar"};
//                                int resulta = JOptionPane.showOptionDialog(
//                                        null,
//                                        field2,
//                                        "CONTRASE√ëA: " + usu.getNombre() + ", Autorizaci√≥n",
//                                        JOptionPane.OK_CANCEL_OPTION,
//                                        JOptionPane.QUESTION_MESSAGE,
//                                        null,
//                                        opts,
//                                        0);
//                                switch (resulta) {
//                                    case 0:
//                                        int contra = Integer.valueOf(field2.getText());
//                                        if (contra == usu.getContrasena()) {
//                                            modificar();
//                                        } else {
//                                            JOptionPane.showMessageDialog(this, "Contrase√±a incorrecta");
//                                        }
//                                        break;
//                                }
//                            } else {
//                                JOptionPane.showMessageDialog(this, "USUARIO Inactivo");
//                            }
//                        } else {
//                            JOptionPane.showMessageDialog(this, "No existe el Usuario");
//                        }
//                        break;
//                }
//            }
//        }

    }//GEN-LAST:event_modificarMenuBtnActionPerformed

    private void nuevoMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoMenuBtnActionPerformed
//        FileReader fr = null;
//        try {
//            fr = new FileReader("c:/Users/permisos.txt");
//        } catch (FileNotFoundException ex) {
//            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        BufferedReader br = new BufferedReader(fr);
//        String acceso = "";
//        try {
//            acceso = br.readLine();
//        } catch (IOException ex) {
//            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        try {
//            br.close();
//        } catch (IOException ex) {
//            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        if (acceso.equals("1")) {
        nuevo();
//        } else {
//            if (acceso.equals("3")) {
//                try {
//                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
//                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
//                }
//                JTextField field = new JTextField("");
//                field.setFont(new Font("Tahoma", Font.PLAIN, 11));
//                String[] options = {"Ingresar", "Regresar"};
//                int result = JOptionPane.showOptionDialog(
//                        null,
//                        field,
//                        "Autorizaci√≥n de USUARIO",
//                        JOptionPane.OK_CANCEL_OPTION,
//                        JOptionPane.QUESTION_MESSAGE,
//                        null,
//                        options,
//                        0);
//                switch (result) {
//                    case 0:
//                        int cod = Integer.valueOf(field.getText());
//                        Usuario usu = null;
//                        try {
//                            usu = new UsuarioService().getUsuarioByCodigo(cod);
//                        } catch (Exception ex) {
//                            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
//                        }
//                        if (usu != null) {
//                            int cla = usu.getNivel();
//                            if (usu.getActivo()) {
//                                if (cla > 3) {
//                                    JOptionPane.showMessageDialog(this, "Acceso Prohibido");
//                                    break;
//                                }
//                                Date a = new Date();
//                                if (cla == 2) {
//                                    if (usu.getFecha() != null) {
//                                        Date b = usu.getFecha();
//                                        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
//                                        if (!sdf.format(a).equals(sdf.format(b))) {
//                                            JOptionPane.showMessageDialog(this, "Acceso Vencido");
//                                            break;
//                                        }
//                                    }
//                                }
//                                JTextField field2 = new JTextField("");
//                                field2.setFont(new Font("Symbol", Font.PLAIN, 12));
//                                String[] opts = {"Ingresar", "Regresar"};
//                                int resulta = JOptionPane.showOptionDialog(
//                                        null,
//                                        field2,
//                                        "CONTRASE√ëA: " + usu.getNombre() + ", Autorizaci√≥n",
//                                        JOptionPane.OK_CANCEL_OPTION,
//                                        JOptionPane.QUESTION_MESSAGE,
//                                        null,
//                                        opts,
//                                        0);
//                                switch (resulta) {
//                                    case 0:
//                                        int contra = Integer.valueOf(field2.getText());
//                                        if (contra == usu.getContrasena()) {
//                                            nuevo();
//                                        } else {
//                                            JOptionPane.showMessageDialog(this, "Contrase√±a incorrecta");
//                                        }
//                                        break;
//                                }
//                            } else {
//                                JOptionPane.showMessageDialog(this, "USUARIO Inactivo");
//                            }
//                        } else {
//                            JOptionPane.showMessageDialog(this, "No existe el Usuario");
//                        }
//                        break;
//                }
//            }
//        }
    }//GEN-LAST:event_nuevoMenuBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AbmSubRubrosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AbmSubRubrosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AbmSubRubrosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AbmSubRubrosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AbmSubRubrosFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu archivoMenu;
    private javax.swing.JButton borrarBtn;
    private javax.swing.JMenuItem eliminarMenuBtn;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modificarBtn;
    private javax.swing.JMenuItem modificarMenuBtn;
    private javax.swing.JButton nuevoBtn;
    private javax.swing.JMenuItem nuevoMenuBtn;
    private javax.swing.JTable subRubroTabla;
    private javax.swing.JButton volverBtn;
    private javax.swing.JMenu volverMenuBtn;
    // End of variables declaration//GEN-END:variables

    private void llenarTabla() {

        try {
            SubRubro2Service subRubroService = new SubRubro2Service();
            listaSubRubro = subRubroService.getRubrosActivosOrdenados();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "error en la base de datos");
        }
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("CODIGO");
        model.addColumn("DETALLE");
        if (listaSubRubro != null && !listaSubRubro.isEmpty()) {
            for (SubRubro2 subRubro : listaSubRubro) {

                Object[] fila = new Object[2];
                fila[0] = subRubro.getCodigo();
                fila[1] = subRubro.getNombre();
                model.addRow(fila);
            }
            subRubroTabla.setModel(model);
        }
    }

    private SubRubro2 getSubRubroSeleccionado() {
        SubRubro2 subRubro = null;
        int filaSeleccionada = subRubroTabla.getSelectedRow();
        try {
            listaSubRubro = new SubRubro2Service().getRubrosActivosOrdenados();
        } catch (Exception ex) {
            Logger.getLogger(AbmSubRubrosFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (filaSeleccionada != -1 && listaSubRubro != null && !listaSubRubro.isEmpty()) {
            subRubro = listaSubRubro.get(filaSeleccionada);
        } else {
            JOptionPane.showMessageDialog(this, "SubRubro - Seleccione un item de la lista");
        }
        return subRubro;
    }

    private void borrarSubrubroSeleccionado() {
//        int filaSeleccionada = subRubroTabla.getSelectedRow();
//        if (filaSeleccionada != -1) {
//            int confirm = JOptionPane.showConfirmDialog(this,
//                    "¬øDesea eliminar al Sub Rubro?",
//                    "Borrar - Sub Rubro",
//                    JOptionPane.OK_OPTION);
//            if (confirm == JOptionPane.OK_OPTION) {
//                SubRubro subRubroABorrar = getSubRubroSeleccionado();
//                try {
//                    new SubRubro2Service().deleteSubRubro(subRubroABorrar);
//                    subRubroTabla.removeAll();
//                    this.llenarTabla();
//                } catch (Exception ex) {
//                    JOptionPane.showMessageDialog(this, "Sub Rubro - Seleccione un sub Rubro de la lista");
//                }
//            }
//        }
    }

    private void modificar() {
        SubRubro2 subRubro = this.getSubRubroSeleccionado();
        ModificarSubRubroFrame msr = new ModificarSubRubroFrame(subRubro);
        msr.setVisible(true);
        this.dispose();
    }

    private void nuevo() {
        NuevoSubRubroFrame nsrf = new NuevoSubRubroFrame();
        nsrf.setVisible(true);
        this.dispose();
    }

}
